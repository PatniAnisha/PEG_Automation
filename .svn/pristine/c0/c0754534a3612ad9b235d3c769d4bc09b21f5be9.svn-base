package com.zycus.eInvoice.Approval;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

import com.relevantcodes.extentreports.ExtentTest;
import com.relevantcodes.extentreports.LogStatus;

import Common.eInvoice_CommonFunctions;

/**
 * <p>
 * <b> Title: </b> Approval.java</br>
 * <br>
 * <b> Description: </b> Preform operations on a purchase order</br>
 * <br>
 * <b> Functions: </br>
 * </b> <br>
 * 1.filterByStatus: user shall be able to download PO as PDF </br>
 * <br>
 * 2.previewPOascXML: user shall be able to preview PO cXML </br>
 * <br>
 * 3.createShipmentNotice: user shall be able to create a shipment notice </br>
 * 
 * @author Anisha
 * @since April 2018
 */

public class Approval extends eInvoice_CommonFunctions{

	private WebDriver driver;
	private By processingLoader 		   = By.id("workflowApproval_processing");
	private By statusXpath 				   = By.xpath("//table[@id='workflowApproval']//td[2]/div");
	private By documentNoXpath 			   = By.xpath("//table[@id='workflowApproval']//td[2]/div");
	private By dateXpath 				   = By.xpath("//table[@id='workflowApproval']//td[contains(@class,'receivedOn')]");
	private By amountXpath 				   = By.xpath("//table[@id='workflowApproval']//td[contains(@class,'entityAmount')]");
	private By filterBtnXpath 			   = By.xpath("//div[contains(@id,'qtip') and @aria-hidden='false']//div[contains(@class,'FilterBtnbx')]//a[text()='Filter']");
	private ExtentTest logger;
	
	/**
	 * Constructor for the class
	 * 
	 * @param driver
	 */
	
	public Approval(WebDriver driver, ExtentTest logger) {
		super(driver, logger);
		this.driver = driver;
		this.logger = logger;
	}
	
	/**
	 * <b>Function:</b> performActionOnInvoice
	 * 
	 * @author Anisha
	 * @since May 2018
	 * @param
	 * @throws None
	 * @return result
	 * @throws Exception
	 */
	public boolean performActionOnInvoice(String action) {
		boolean status = false;
		try {
			click(By.xpath("//*[@id='workflowApproval']//tr[1]/td[8]//a[text()='Actions']"));
			click(By.xpath("//*[@id='workflowApproval']//tr[1]//li/a[contains(text(),'" + action + "')]"));
			switch (action) {
			case "Approve":
				if (findElement(By.id("approvedAmtForPaymentTxt0")).getAttribute("value") != null)
					sendKeys(By.id("approvedAmtForPaymentTxt0"), "100");
				sendKeys(By.id("approvalComments"), "approving the document");
				click(By.xpath(".//*[@id='frmApprove']//input[contains(@class,'dev_approve')]"));
				waitUntilInvisibilityOfElement(By.xpath("//*[@id='status_overlay_processingMain']/div"));
				logger.log(LogStatus.INFO, "approved the invoice");
				status = true;
				break;
			case "Reject":
				sendKeys(By.id("rejectComments"), "rejecting the document");
				click(By.xpath("//*[@id='frmReject']//input[contains(@class,'dev_reject')]"));
				waitUntilInvisibilityOfElement(By.xpath("//*[@id='status_overlay_processingMain']/div"));
				logger.log(LogStatus.INFO, "rejected the invoice");
				status = true;
				break;
			case "Delegate":
				sendKeys(By.id("txtDelegateName"), "Chaitali");
				click(By.xpath("//div[contains(@class,'delegate')]//ul[contains(@style,'block')]/li"));
				sendKeys(By.id("delegateComments"), "delegating the document");
				click(By.xpath("btnDelegateSave"));
				waitUntilInvisibilityOfElement(By.xpath("//*[@id='status_overlay_processingMain']/div"));
				logger.log(LogStatus.INFO, "delegated the invoice");
				status = true;
				break;
			default:
				logger.log(LogStatus.INFO, "select the right option");
				break;
			}

		} catch (Exception e) {

		}
		return status;
	}
	
	/**
	 * <b>Function:</b> filterByStatus
	 * @author Varun Khurana
	 * @since April 2018
	 * @param checkBoxLbl
	 * @throws None
	 * @return result
	 * @throws Exception 
	 */ 
	
	public boolean filterByStatus(String checkBoxLbl) throws Exception{
		boolean result = false;
		
		click(By.xpath("//th[contains(@class,'invstatusFltrHdr')]//b"));
		filterByChkbox(checkBoxLbl);
		if(findElement(processingLoader ).getAttribute("style").contains("block")){
			List<WebElement> objfilteredList = driver.findElements(statusXpath);
			for(WebElement obj:objfilteredList){
				if(obj.getText().equals(checkBoxLbl))
					result =  true;
				else{
					result =  false;
					break;
				}
			}
		}
		return result;
	}
	
	/**
	 * <b>Function:</b> filterByReceivedOn
	 * @author Varun Khurana
	 * @since April 2018
	 * @param fromDt, ToDt
	 * @return result
	 * @throws Exception 
	 */ 
	
	private boolean filterByReceivedOn(Date fromDt, Date ToDt) throws Exception{
		boolean result = false;
		
		click(By.xpath("//th[contains(@class,'receivedOnFilter')]//b"));
		filterByDateRange(fromDt, ToDt);
		if(findElement(processingLoader).getAttribute("style").contains("block")){
			List<WebElement> objfilteredDateList = driver.findElements(dateXpath);
			for(WebElement obj:objfilteredDateList){
				DateFormat format = new SimpleDateFormat("dd/mm/yyyy");
				Date dt = format.parse(obj.getText()); 
				if(dt.compareTo(fromDt)>=0 && dt.compareTo(ToDt)<=0)
					result =  true;
				else{
					result =  false;
					break;
				}
			}
		}
		return result;
	}
	
	
	/**
	 * <b>Function:</b> filterByAmountRange
	 * @author Varun Khurana
	 * @since April 2018
	 * @param fromDt, ToDt, currType
	 * @throws ParseException
	 * @return result
	 */
	
	private boolean filterByAmountRange(float fromAmt, float ToAmt, String currType) throws ParseException{
		boolean result = false;		
		
		filterByAmtRange(fromAmt, ToAmt, currType);
		if(findElement(processingLoader).getAttribute("style").contains("block")){
			List<WebElement> objfilteredAmtList = driver.findElements(amountXpath);
			for(WebElement obj:objfilteredAmtList){
				Float amount = Float.parseFloat((obj.getText().split(" "))[1]);
				String currencyType = null;
				if(amount >= fromAmt && amount <= ToAmt){
					if(currType!="")
						currencyType = (obj.getText().split(" "))[0];
						if(currencyType == currType)
							result =  true;
					else
						result =  true;
				}else{
					result =  false;
					break;
				}
			}
		}
		return result;
	}
	
	/**
	 * <b>Function:</b> filterByAmountToApprove
	 * @author Varun Khurana
	 * @since April 2018
	 * @param fromDt,ToDt
	 * @return result
	 * @throws Exception 
	 */
	
	public boolean filterByAmountToApprove(float fromAmt, float ToAmt) throws Exception{
		boolean result = false;
		click(By.xpath("//th[contains(@class,'amountFilter')]//b"));
		result = filterByAmountRange(fromAmt, ToAmt, "")?true:false;
		return result;
	}
	
	/**
	 * <b>Function:</b> filterByAmountToApprove
	 * @author Varun Khurana
	 * @since April 2018
	 * @param fromDt, ToDt, currType
	 * @return result
	 * @throws Exception 
	 */
	
	public boolean filterByAmountToApprove(float fromAmt, float ToAmt, String currType) throws Exception{
		boolean result = false;		
		click(By.xpath("//th[contains(@class,'amountFilter')]//b"));
		result = filterByAmountRange(fromAmt, ToAmt, currType)?true:false;
		return result;
	}
	
	/**
	 * <b>Function:</b> filterBySupplier
	 * @author Varun Khurana
	 * @since April 2018
	 * @param supplier
	 * @throws ParseException
	 * @return result
	 */
	
	public boolean filterBySupplier(String supplier) throws ParseException{
		boolean result = false;	
		result = filterByText("Supplier", supplier)?true:false;
		return result;
	}
	
	/**
	 * <b>Function:</b> filterByDocumentNo
	 * @author Varun Khurana
	 * @since April 2018
	 * @param checkBoxLbl
	 * @throws ParseException
	 * @return result
	 * @throws Exception 
	 */
	
	public boolean filterByDocumentNo(String checkBoxLbl) throws Exception{
		boolean result = false;
		
		click(By.xpath("//th[contains(@class,'numberFilter')]//b"));
		findElement(By.xpath("(//div[contains(@id,'qtip')]//input[following-sibling::text()[contains(.,'"+checkBoxLbl+"')]])[1]")).click();
		findElement(filterBtnXpath).click();
		
		if(findElement(processingLoader).getAttribute("style").contains("block")){
			List<WebElement> objfilteredList = driver.findElements(documentNoXpath);
			for(WebElement obj:objfilteredList){
				if(obj.getText().equals(checkBoxLbl))
					result =  true;
				else{
					result =  false;
					break;
				}
			}
		}
		return result;
	}
	
	/**
	 * <b>Function:</b> filterByDocumentNo
	 * @author Varun Khurana
	 * @since April 2018
	 * @param checkBoxLbl, invoiceNo
	 * @throws ParseException
	 * @return result
	 * @throws Exception 
	 */
	
	public boolean filterByDocumentNo(String checkBoxLbl, String invoiceNo) throws Exception{
		boolean result = false;
		
		click(By.xpath("//th[contains(@class,'numberFilter')]//b"));
		sendKeys(By.id("txtFltrInvoiceNum"), invoiceNo);
		findElement(By.xpath("(//div[contains(@id,'qtip')]//input[following-sibling::text()[contains(.,'"+checkBoxLbl+"')]])[1]")).click();
		findElement(filterBtnXpath).click();
		
		if(findElement(processingLoader).getAttribute("style").contains("block")){
			List<WebElement> objfilteredList = driver.findElements(documentNoXpath);
			for(WebElement obj:objfilteredList){
				if(obj.getText().equals(invoiceNo))
					result =  true;
				else{
					result =  false;
					break;
				}
			}
		}
		return result;
	}

}
